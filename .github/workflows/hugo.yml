# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:   :
  # Runs on pushes targeting the default branch#针对默认分支推送运行
  push:   推动:
    branches: ["main"]   分支机构(“主要”):

  # Allows you to run this workflow manually from the Actions tab#允许您从Actions选项卡手动运行此工作流
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages#设置GITHUB_TOKEN的权限，允许部署到GitHub页面
permissions:   权限:
  contents: read   内容:读
  pages: write   页:写
  id-token: write   id-token:写

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.#只允许一个并发部署，跳过正在运行和最新队列之间的运行队列。
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.但是，不要取消正在进行的运行，因为我们希望这些生产部署能够完成。
concurrency:   并发性:
  group: "pages"   组:“页面”
  cancel-in-progress: false   cancel-in-progress:假

# Default to bash
defaults:
  run:
    shell: bash

jobs:   工作:
  # Build job   #构建任务
  build:   构建:
    runs-on: ubuntu-latest   上运行:ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0
    steps:   步骤:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout   -名称:Checkout
        uses: actions/checkout@v4   用途:行动/ checkout@v4
        with:   :
          submodules: recursive
      - name: Setup Pages   —name:设置页面
        id: pages
        uses: actions/configure-pages@v5用途:行动/ configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact   —name:上传工件
        uses: actions/upload-pages-artifact@v3用途:行动/ upload-pages-artifact@v3
        with:   :
          path: ./public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
